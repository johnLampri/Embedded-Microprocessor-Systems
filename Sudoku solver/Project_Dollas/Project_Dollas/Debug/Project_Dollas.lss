
Project_Dollas.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000013c  00000000  00000000  00000114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000013c  00000254  2**0
                  ALLOC
  2 .bss          00000057  00800060  00800060  00000ffe  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000ffe  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  0000102d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000edf  00000000  00000000  000010c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000072b  00000000  00000000  00001fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006ef  00000000  00000000  000026cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000021c  00000000  00000000  00002dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b5  00000000  00000000  00002fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ac  00000000  00000000  00003191  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  0000393d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000ee0  00000ee0  00000ff4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000039e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.initialize_tables 0000003c  00000d68  00000d68  00000e7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.init    0000002a  00000dd6  00000dd6  00000eea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.break_command 0000000c  00000eac  00000eac  00000fc0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.Sending_Results 0000005c  00000b96  00000b96  00000caa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.insert  00000026  00000e00  00000e00  00000f14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.enable_send_interrupt 00000006  00000ed4  00000ed4  00000fe8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.ascii_answer 00000032  00000da4  00000da4  00000eb8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_11 00000166  00000144  00000144  00000258  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__vector_12 000000bc  000006e0  000006e0  000007f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__vector_6 0000008c  000008de  000008de  000009f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.FindEmptyLocation 00000058  00000bf2  00000bf2  00000d06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.used    000000d0  00000542  00000542  00000656  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.isOk    0000004e  00000c4a  00000c4a  00000d5e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.SudokuSolver 000000e6  000002aa  000002aa  000003be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.main    0000003e  00000d2a  00000d2a  00000e3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .bss.control_flag 00000001  008000bd  008000bd  00000ffe  2**0
                  ALLOC
 30 .data.value_command 00000006  008000b7  00000ee4  00000ff8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 31 .progmemx.data.done_command 00000003  00000140  00000140  00000254  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 32 .progmemx.data.ok_command 00000004  0000013c  0000013c  00000250  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 33 .bss.choose_command 00000001  008000be  008000be  00000ffe  2**0
                  ALLOC
 34 .bss.y_temp   00000001  008000bf  008000bf  00000ffe  2**0
                  ALLOC
 35 .bss.x_temp   00000001  008000c0  008000c0  00000ffe  2**0
                  ALLOC
 36 .bss.counter_command 00000001  008000c1  008000c1  00000ffe  2**0
                  ALLOC
 37 .bss.led_counter 00000001  008000c2  008000c2  00000ffe  2**0
                  ALLOC
 38 .text.avrlibc.fplib 0000005e  00000b38  00000b38  00000c4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.avrlibc.fplib 0000007a  0000096a  0000096a  00000a7e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.avrlibc.fplib 00000044  00000ce6  00000ce6  00000dfa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.avrlibc.fplib 0000000e  00000e74  00000e74  00000f88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.avrlibc.fplib 000000a0  0000083e  0000083e  00000952  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.avrlibc.fplib 00000076  000009e4  000009e4  00000af8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.avrlibc.fplib 0000000c  00000eb8  00000eb8  00000fcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc.fplib 00000006  00000eda  00000eda  00000fee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc.fplib 0000004e  00000c98  00000c98  00000dac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc.fplib 00000010  00000e64  00000e64  00000f78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc.fplib 00000076  00000a5a  00000a5a  00000b6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc.fplib 000000a2  0000079c  0000079c  000008b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.avrlibc.fplib 00000068  00000ad0  00000ad0  00000be4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 00000008  00000ec4  00000ec4  00000fd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 000000d4  0000046e  0000046e  00000582  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 0000000e  00000e82  00000e82  00000f96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 000000ce  00000612  00000612  00000726  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 00000008  00000ecc  00000ecc  00000fe0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 000000de  00000390  00000390  000004a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 0000001c  00000e48  00000e48  00000f5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 0000000e  00000e90  00000e90  00000fa4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000000e  00000e9e  00000e9e  00000fb2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 00000022  00000e26  00000e26  00000f3a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
   4:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
   8:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
   c:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  10:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  14:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  18:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__vector_6>
  1c:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  20:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  24:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  28:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__vector_11>
  30:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__vector_12>
  34:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  38:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  3c:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  40:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  44:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  48:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  4c:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  50:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <pow+0x92>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <.dinit>:
  d6:	00 60       	ori	r16, 0x00	; 0
  d8:	00 b7       	in	r16, 0x30	; 48
  da:	80 00       	.word	0x0080	; ????
  dc:	b7 00       	.word	0x00b7	; ????
  de:	bd 00       	.word	0x00bd	; ????
  e0:	0e e4       	ldi	r16, 0x4E	; 78
  e2:	00 bd       	out	0x20, r16	; 32
  e4:	00 c3       	rjmp	.+1536   	; 0x6e6 <__vector_12+0x6>
  e6:	80 00       	.word	0x0080	; ????

000000e8 <__ctors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf e5       	ldi	r28, 0x5F	; 95
  ee:	d4 e0       	ldi	r29, 0x04	; 4
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	cd bf       	out	0x3d, r28	; 61

000000f4 <__do_copy_data>:
  f4:	e6 ed       	ldi	r30, 0xD6	; 214
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	40 e0       	ldi	r20, 0x00	; 0
  fa:	17 c0       	rjmp	.+46     	; 0x12a <__do_clear_bss+0x8>
  fc:	b5 91       	lpm	r27, Z+
  fe:	a5 91       	lpm	r26, Z+
 100:	35 91       	lpm	r19, Z+
 102:	25 91       	lpm	r18, Z+
 104:	05 91       	lpm	r16, Z+
 106:	07 fd       	sbrc	r16, 7
 108:	0c c0       	rjmp	.+24     	; 0x122 <__do_clear_bss>
 10a:	95 91       	lpm	r25, Z+
 10c:	85 91       	lpm	r24, Z+
 10e:	ef 01       	movw	r28, r30
 110:	f9 2f       	mov	r31, r25
 112:	e8 2f       	mov	r30, r24
 114:	05 90       	lpm	r0, Z+
 116:	0d 92       	st	X+, r0
 118:	a2 17       	cp	r26, r18
 11a:	b3 07       	cpc	r27, r19
 11c:	d9 f7       	brne	.-10     	; 0x114 <__do_copy_data+0x20>
 11e:	fe 01       	movw	r30, r28
 120:	04 c0       	rjmp	.+8      	; 0x12a <__do_clear_bss+0x8>

00000122 <__do_clear_bss>:
 122:	1d 92       	st	X+, r1
 124:	a2 17       	cp	r26, r18
 126:	b3 07       	cpc	r27, r19
 128:	e1 f7       	brne	.-8      	; 0x122 <__do_clear_bss>
 12a:	e7 3e       	cpi	r30, 0xE7	; 231
 12c:	f4 07       	cpc	r31, r20
 12e:	31 f7       	brne	.-52     	; 0xfc <__do_copy_data+0x8>
 130:	0e 94 95 06 	call	0xd2a	; 0xd2a <main>
 134:	0c 94 9c 00 	jmp	0x138	; 0x138 <_exit>

00000138 <_exit>:
 138:	f8 94       	cli

0000013a <__stop_program>:
 13a:	ff cf       	rjmp	.-2      	; 0x13a <__stop_program>

Disassembly of section .text:

00000ee0 <__bad_interrupt>:
 ee0:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.initialize_tables:

00000d68 <initialize_tables>:
						//2 break
						//3 done 

void initialize_tables(void){
	//initialize tables to all 0
	for(int i=0;i<9;i++){
 d68:	20 e0       	ldi	r18, 0x00	; 0
 d6a:	30 e0       	ldi	r19, 0x00	; 0
 d6c:	17 c0       	rjmp	.+46     	; 0xd9c <initialize_tables+0x34>
		for(int j=0;j<9;j++){
			table[i][j] = UNASSIGNED;
 d6e:	f9 01       	movw	r30, r18
 d70:	ee 0f       	add	r30, r30
 d72:	ff 1f       	adc	r31, r31
 d74:	ee 0f       	add	r30, r30
 d76:	ff 1f       	adc	r31, r31
 d78:	ee 0f       	add	r30, r30
 d7a:	ff 1f       	adc	r31, r31
 d7c:	e2 0f       	add	r30, r18
 d7e:	f3 1f       	adc	r31, r19
 d80:	ea 59       	subi	r30, 0x9A	; 154
 d82:	ff 4f       	sbci	r31, 0xFF	; 255
 d84:	e8 0f       	add	r30, r24
 d86:	f9 1f       	adc	r31, r25
 d88:	10 82       	st	Z, r1
						//3 done 

void initialize_tables(void){
	//initialize tables to all 0
	for(int i=0;i<9;i++){
		for(int j=0;j<9;j++){
 d8a:	01 96       	adiw	r24, 0x01	; 1
 d8c:	02 c0       	rjmp	.+4      	; 0xd92 <initialize_tables+0x2a>
 d8e:	80 e0       	ldi	r24, 0x00	; 0
 d90:	90 e0       	ldi	r25, 0x00	; 0
 d92:	89 30       	cpi	r24, 0x09	; 9
 d94:	91 05       	cpc	r25, r1
 d96:	5c f3       	brlt	.-42     	; 0xd6e <initialize_tables+0x6>
						//2 break
						//3 done 

void initialize_tables(void){
	//initialize tables to all 0
	for(int i=0;i<9;i++){
 d98:	2f 5f       	subi	r18, 0xFF	; 255
 d9a:	3f 4f       	sbci	r19, 0xFF	; 255
 d9c:	29 30       	cpi	r18, 0x09	; 9
 d9e:	31 05       	cpc	r19, r1
 da0:	b4 f3       	brlt	.-20     	; 0xd8e <initialize_tables+0x26>
		for(int j=0;j<9;j++){
			table[i][j] = UNASSIGNED;
		}
	}
}
 da2:	08 95       	ret

Disassembly of section .text.init:

00000dd6 <init>:

void init(void){
	TCNT1 = 0;		//initialize timer to 0
 dd6:	1d bc       	out	0x2d, r1	; 45
 dd8:	1c bc       	out	0x2c, r1	; 44
	TIFR = 16;		//set compare flag OCF1A
 dda:	80 e1       	ldi	r24, 0x10	; 16
 ddc:	88 bf       	out	0x38, r24	; 56
	TCCR1B = 1;		//set prescaler to count clk
 dde:	91 e0       	ldi	r25, 0x01	; 1
 de0:	9e bd       	out	0x2e, r25	; 46
	OCR1A = 40000;	//set counter  compare value
 de2:	20 e4       	ldi	r18, 0x40	; 64
 de4:	3c e9       	ldi	r19, 0x9C	; 156
 de6:	3b bd       	out	0x2b, r19	; 43
 de8:	2a bd       	out	0x2a, r18	; 42
	TIMSK = 16;		//enable output compare intpt
 dea:	89 bf       	out	0x39, r24	; 57
	
	UBRRH = 0;	//make sure URSEL=0 to use UBBR register
 dec:	10 bc       	out	0x20, r1	; 32
	UBRRL = 64;	//set baud rate
 dee:	80 e4       	ldi	r24, 0x40	; 64
 df0:	89 b9       	out	0x09, r24	; 9
	//enable receibe and transmit and their interrupts
	UCSRB = (1<<TXEN)|(1<<RXEN)|(1<<RXCIE);
 df2:	88 e9       	ldi	r24, 0x98	; 152
 df4:	8a b9       	out	0x0a, r24	; 10
	//set frame format : 8data,1 stop bit ,no parity
	//asynchronous mode URSEL=1 this means we use UCSRC and not UBRRH same direction
	UCSRC = (1<<URSEL)|(3<<UCSZ0);
 df6:	86 e8       	ldi	r24, 0x86	; 134
 df8:	80 bd       	out	0x20, r24	; 32
	
	initialize_tables();
 dfa:	0e 94 b4 06 	call	0xd68	; 0xd68 <initialize_tables>
 dfe:	08 95       	ret

Disassembly of section .text.break_command:

00000eac <break_command>:
	return;
}

void break_command(){
	cli();
 eac:	f8 94       	cli
	while(1){
		if(control_flag != 2){
 eae:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <control_flag>
 eb2:	82 30       	cpi	r24, 0x02	; 2
 eb4:	e1 f3       	breq	.-8      	; 0xeae <break_command+0x2>
			return;
		}
	}
}
 eb6:	08 95       	ret

Disassembly of section .text.Sending_Results:

00000b96 <Sending_Results>:
	TCNT1 = 0;
}



void sending_results(){
 b96:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <x_temp>
 b9a:	a7 eb       	ldi	r26, 0xB7	; 183
 b9c:	b0 e0       	ldi	r27, 0x00	; 0
 b9e:	81 e3       	ldi	r24, 0x31	; 49
 ba0:	82 0f       	add	r24, r18
 ba2:	11 96       	adiw	r26, 0x01	; 1
 ba4:	8c 93       	st	X, r24
 ba6:	11 97       	sbiw	r26, 0x01	; 1
 ba8:	30 91 bf 00 	lds	r19, 0x00BF	; 0x8000bf <y_temp>
 bac:	81 e3       	ldi	r24, 0x31	; 49
 bae:	83 0f       	add	r24, r19
 bb0:	12 96       	adiw	r26, 0x02	; 2
 bb2:	8c 93       	st	X, r24
 bb4:	12 97       	sbiw	r26, 0x02	; 2
 bb6:	82 2f       	mov	r24, r18
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	fc 01       	movw	r30, r24
 bbc:	ee 0f       	add	r30, r30
 bbe:	ff 1f       	adc	r31, r31
 bc0:	ee 0f       	add	r30, r30
 bc2:	ff 1f       	adc	r31, r31
 bc4:	ee 0f       	add	r30, r30
 bc6:	ff 1f       	adc	r31, r31
 bc8:	e8 0f       	add	r30, r24
 bca:	f9 1f       	adc	r31, r25
 bcc:	ea 59       	subi	r30, 0x9A	; 154
 bce:	ff 4f       	sbci	r31, 0xFF	; 255
 bd0:	e3 0f       	add	r30, r19
 bd2:	f1 1d       	adc	r31, r1
 bd4:	80 81       	ld	r24, Z
 bd6:	80 5d       	subi	r24, 0xD0	; 208
 bd8:	13 96       	adiw	r26, 0x03	; 3
 bda:	8c 93       	st	X, r24
 bdc:	2f 5f       	subi	r18, 0xFF	; 255
 bde:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <x_temp>
 be2:	29 30       	cpi	r18, 0x09	; 9
 be4:	28 f0       	brcs	.+10     	; 0xbf0 <Sending_Results+0x5a>
 be6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <x_temp>
 bea:	3f 5f       	subi	r19, 0xFF	; 255
 bec:	30 93 bf 00 	sts	0x00BF, r19	; 0x8000bf <y_temp>
 bf0:	08 95       	ret

Disassembly of section .text.insert:

00000e00 <insert>:
	}
	return;
}

void insert(int x,int y,int value){
	table[x-1][y-1] = value;	//insert the value to the table
 e00:	01 97       	sbiw	r24, 0x01	; 1
 e02:	61 50       	subi	r22, 0x01	; 1
 e04:	71 09       	sbc	r23, r1
 e06:	9c 01       	movw	r18, r24
 e08:	22 0f       	add	r18, r18
 e0a:	33 1f       	adc	r19, r19
 e0c:	22 0f       	add	r18, r18
 e0e:	33 1f       	adc	r19, r19
 e10:	22 0f       	add	r18, r18
 e12:	33 1f       	adc	r19, r19
 e14:	82 0f       	add	r24, r18
 e16:	93 1f       	adc	r25, r19
 e18:	8a 59       	subi	r24, 0x9A	; 154
 e1a:	9f 4f       	sbci	r25, 0xFF	; 255
 e1c:	fc 01       	movw	r30, r24
 e1e:	e6 0f       	add	r30, r22
 e20:	f7 1f       	adc	r31, r23
 e22:	40 83       	st	Z, r20
 e24:	08 95       	ret

Disassembly of section .text.enable_send_interrupt:

00000ed4 <enable_send_interrupt>:
}

void enable_send_interrupt(){
	UCSRB = (1<<TXEN)|(1<<RXEN)|(1<<RXCIE)|(1<<UDRIE);	//enable data empty intr
 ed4:	88 eb       	ldi	r24, 0xB8	; 184
 ed6:	8a b9       	out	0x0a, r24	; 10
 ed8:	08 95       	ret

Disassembly of section .text.ascii_answer:

00000da4 <ascii_answer>:
}

void ascii_answer(int x,int y){	
	value_command[1] = x;		//fill the value command with the x value on 2nd position
 da4:	e7 eb       	ldi	r30, 0xB7	; 183
 da6:	f0 e0       	ldi	r31, 0x00	; 0
 da8:	81 83       	std	Z+1, r24	; 0x01
	value_command[2] = y;		//fill the value command with the y value on 3rd position
 daa:	62 83       	std	Z+2, r22	; 0x02
	value_command[3] = table[(x-'0')-1][(y-'0')-1]+'0';	//fill the value command with the value on 4rth position
 dac:	c1 97       	sbiw	r24, 0x31	; 49
 dae:	61 53       	subi	r22, 0x31	; 49
 db0:	71 09       	sbc	r23, r1
 db2:	9c 01       	movw	r18, r24
 db4:	22 0f       	add	r18, r18
 db6:	33 1f       	adc	r19, r19
 db8:	22 0f       	add	r18, r18
 dba:	33 1f       	adc	r19, r19
 dbc:	22 0f       	add	r18, r18
 dbe:	33 1f       	adc	r19, r19
 dc0:	82 0f       	add	r24, r18
 dc2:	93 1f       	adc	r25, r19
 dc4:	8a 59       	subi	r24, 0x9A	; 154
 dc6:	9f 4f       	sbci	r25, 0xFF	; 255
 dc8:	dc 01       	movw	r26, r24
 dca:	a6 0f       	add	r26, r22
 dcc:	b7 1f       	adc	r27, r23
 dce:	8c 91       	ld	r24, X
 dd0:	80 5d       	subi	r24, 0xD0	; 208
 dd2:	83 83       	std	Z+3, r24	; 0x03
 dd4:	08 95       	ret

Disassembly of section .text.__vector_11:

00000144 <__vector_11>:
	TCNT1 = 0;
}



void sending_results(){
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	ff 92       	push	r15
 150:	2f 93       	push	r18
 152:	3f 93       	push	r19
 154:	4f 93       	push	r20
 156:	5f 93       	push	r21
 158:	6f 93       	push	r22
 15a:	7f 93       	push	r23
 15c:	8f 93       	push	r24
 15e:	9f 93       	push	r25
 160:	af 93       	push	r26
 162:	bf 93       	push	r27
 164:	ef 93       	push	r30
 166:	ff 93       	push	r31
 168:	8c b1       	in	r24, 0x0c	; 12
 16a:	8c b1       	in	r24, 0x0c	; 12
 16c:	8a e0       	ldi	r24, 0x0A	; 10
 16e:	f8 12       	cpse	r15, r24
 170:	80 c0       	rjmp	.+256    	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
 172:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 176:	81 34       	cpi	r24, 0x41	; 65
 178:	31 f4       	brne	.+12     	; 0x186 <__vector_11+0x42>
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 180:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 184:	73 c0       	rjmp	.+230    	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 186:	83 34       	cpi	r24, 0x43	; 67
 188:	41 f4       	brne	.+16     	; 0x19a <__vector_11+0x56>
 18a:	0e 94 b4 06 	call	0xd68	; 0xd68 <initialize_tables>
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 194:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 198:	69 c0       	rjmp	.+210    	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 19a:	8e 34       	cpi	r24, 0x4E	; 78
 19c:	d1 f4       	brne	.+52     	; 0x1d2 <__vector_11+0x8e>
 19e:	e0 e6       	ldi	r30, 0x60	; 96
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	43 81       	ldd	r20, Z+3	; 0x03
 1a4:	62 81       	ldd	r22, Z+2	; 0x02
 1a6:	81 81       	ldd	r24, Z+1	; 0x01
 1a8:	50 e0       	ldi	r21, 0x00	; 0
 1aa:	40 53       	subi	r20, 0x30	; 48
 1ac:	51 09       	sbc	r21, r1
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	60 53       	subi	r22, 0x30	; 48
 1b2:	71 09       	sbc	r23, r1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	c0 97       	sbiw	r24, 0x30	; 48
 1b8:	0e 94 00 07 	call	0xe00	; 0xe00 <insert>
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 1c2:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 1c6:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <led_counter>
 1ca:	8f 5f       	subi	r24, 0xFF	; 255
 1cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <led_counter>
 1d0:	4d c0       	rjmp	.+154    	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 1d2:	80 35       	cpi	r24, 0x50	; 80
 1d4:	41 f4       	brne	.+16     	; 0x1e6 <__vector_11+0xa2>
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <control_flag>
 1dc:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 1e0:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 1e4:	43 c0       	rjmp	.+134    	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 1e6:	83 35       	cpi	r24, 0x53	; 83
 1e8:	61 f4       	brne	.+24     	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 1ea:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <x_temp>
 1ee:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <y_temp>
 1f2:	0e 94 cb 05 	call	0xb96	; 0xb96 <Sending_Results>
 1f6:	83 e0       	ldi	r24, 0x03	; 3
 1f8:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 1fc:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 200:	35 c0       	rjmp	.+106    	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 202:	84 35       	cpi	r24, 0x54	; 84
 204:	a1 f4       	brne	.+40     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 206:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <y_temp>
 20a:	89 30       	cpi	r24, 0x09	; 9
 20c:	41 f4       	brne	.+16     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 20e:	82 e0       	ldi	r24, 0x02	; 2
 210:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 214:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <x_temp>
 218:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <y_temp>
 21c:	05 c0       	rjmp	.+10     	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
 21e:	0e 94 cb 05 	call	0xb96	; 0xb96 <Sending_Results>
 222:	83 e0       	ldi	r24, 0x03	; 3
 224:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 228:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 22c:	1f c0       	rjmp	.+62     	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 22e:	8f 34       	cpi	r24, 0x4F	; 79
 230:	19 f4       	brne	.+6      	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 232:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <control_flag>
 236:	1a c0       	rjmp	.+52     	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 238:	82 34       	cpi	r24, 0x42	; 66
 23a:	49 f4       	brne	.+18     	; 0x24e <__EEPROM_REGION_LENGTH__+0x4e>
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <control_flag>
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 248:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 24c:	0f c0       	rjmp	.+30     	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 24e:	84 34       	cpi	r24, 0x44	; 68
 250:	69 f4       	brne	.+26     	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
 252:	e0 e6       	ldi	r30, 0x60	; 96
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	62 81       	ldd	r22, Z+2	; 0x02
 258:	81 81       	ldd	r24, Z+1	; 0x01
 25a:	70 e0       	ldi	r23, 0x00	; 0
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	0e 94 d2 06 	call	0xda4	; 0xda4 <ascii_answer>
 262:	83 e0       	ldi	r24, 0x03	; 3
 264:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
 268:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 26c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <counter_command>
 270:	0a c0       	rjmp	.+20     	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 272:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <counter_command>
 276:	e8 2f       	mov	r30, r24
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	e0 5a       	subi	r30, 0xA0	; 160
 27c:	ff 4f       	sbci	r31, 0xFF	; 255
 27e:	f0 82       	st	Z, r15
 280:	8f 5f       	subi	r24, 0xFF	; 255
 282:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <counter_command>
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	bf 91       	pop	r27
 28c:	af 91       	pop	r26
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	7f 91       	pop	r23
 294:	6f 91       	pop	r22
 296:	5f 91       	pop	r21
 298:	4f 91       	pop	r20
 29a:	3f 91       	pop	r19
 29c:	2f 91       	pop	r18
 29e:	ff 90       	pop	r15
 2a0:	0f 90       	pop	r0
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	0f 90       	pop	r0
 2a6:	1f 90       	pop	r1
 2a8:	18 95       	reti

Disassembly of section .text.__vector_12:

000006e0 <__vector_12>:
 6e0:	1f 92       	push	r1
 6e2:	0f 92       	push	r0
 6e4:	0f b6       	in	r0, 0x3f	; 63
 6e6:	0f 92       	push	r0
 6e8:	11 24       	eor	r1, r1
 6ea:	8f 93       	push	r24
 6ec:	9f 93       	push	r25
 6ee:	af 93       	push	r26
 6f0:	ef 93       	push	r30
 6f2:	ff 93       	push	r31
 6f4:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <choose_command>
 6f8:	81 30       	cpi	r24, 0x01	; 1
 6fa:	c1 f4       	brne	.+48     	; 0x72c <__vector_12+0x4c>
 6fc:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <counter_command>
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	a0 e0       	ldi	r26, 0x00	; 0
 704:	84 5c       	subi	r24, 0xC4	; 196
 706:	9e 4f       	sbci	r25, 0xFE	; 254
 708:	af 4f       	sbci	r26, 0xFF	; 255
 70a:	fc 01       	movw	r30, r24
 70c:	84 91       	lpm	r24, Z
 70e:	a7 fd       	sbrc	r26, 7
 710:	80 81       	ld	r24, Z
 712:	8c b9       	out	0x0c, r24	; 12
 714:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <counter_command>
 718:	8f 5f       	subi	r24, 0xFF	; 255
 71a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <counter_command>
 71e:	84 30       	cpi	r24, 0x04	; 4
 720:	99 f5       	brne	.+102    	; 0x788 <__vector_12+0xa8>
 722:	88 e9       	ldi	r24, 0x98	; 152
 724:	8a b9       	out	0x0a, r24	; 10
 726:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <counter_command>
 72a:	2e c0       	rjmp	.+92     	; 0x788 <__vector_12+0xa8>
 72c:	82 30       	cpi	r24, 0x02	; 2
 72e:	c1 f4       	brne	.+48     	; 0x760 <__vector_12+0x80>
 730:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <counter_command>
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	a0 e0       	ldi	r26, 0x00	; 0
 738:	80 5c       	subi	r24, 0xC0	; 192
 73a:	9e 4f       	sbci	r25, 0xFE	; 254
 73c:	af 4f       	sbci	r26, 0xFF	; 255
 73e:	fc 01       	movw	r30, r24
 740:	84 91       	lpm	r24, Z
 742:	a7 fd       	sbrc	r26, 7
 744:	80 81       	ld	r24, Z
 746:	8c b9       	out	0x0c, r24	; 12
 748:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <counter_command>
 74c:	8f 5f       	subi	r24, 0xFF	; 255
 74e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <counter_command>
 752:	83 30       	cpi	r24, 0x03	; 3
 754:	c9 f4       	brne	.+50     	; 0x788 <__vector_12+0xa8>
 756:	88 e9       	ldi	r24, 0x98	; 152
 758:	8a b9       	out	0x0a, r24	; 10
 75a:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <counter_command>
 75e:	14 c0       	rjmp	.+40     	; 0x788 <__vector_12+0xa8>
 760:	83 30       	cpi	r24, 0x03	; 3
 762:	91 f4       	brne	.+36     	; 0x788 <__vector_12+0xa8>
 764:	e0 91 c1 00 	lds	r30, 0x00C1	; 0x8000c1 <counter_command>
 768:	f0 e0       	ldi	r31, 0x00	; 0
 76a:	e9 54       	subi	r30, 0x49	; 73
 76c:	ff 4f       	sbci	r31, 0xFF	; 255
 76e:	80 81       	ld	r24, Z
 770:	8c b9       	out	0x0c, r24	; 12
 772:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <counter_command>
 776:	8f 5f       	subi	r24, 0xFF	; 255
 778:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <counter_command>
 77c:	86 30       	cpi	r24, 0x06	; 6
 77e:	21 f4       	brne	.+8      	; 0x788 <__vector_12+0xa8>
 780:	88 e9       	ldi	r24, 0x98	; 152
 782:	8a b9       	out	0x0a, r24	; 10
 784:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <counter_command>
 788:	ff 91       	pop	r31
 78a:	ef 91       	pop	r30
 78c:	af 91       	pop	r26
 78e:	9f 91       	pop	r25
 790:	8f 91       	pop	r24
 792:	0f 90       	pop	r0
 794:	0f be       	out	0x3f, r0	; 63
 796:	0f 90       	pop	r0
 798:	1f 90       	pop	r1
 79a:	18 95       	reti

Disassembly of section .text.__vector_6:

000008de <__vector_6>:
 8de:	1f 92       	push	r1
 8e0:	0f 92       	push	r0
 8e2:	0f b6       	in	r0, 0x3f	; 63
 8e4:	0f 92       	push	r0
 8e6:	11 24       	eor	r1, r1
 8e8:	2f 93       	push	r18
 8ea:	3f 93       	push	r19
 8ec:	4f 93       	push	r20
 8ee:	5f 93       	push	r21
 8f0:	6f 93       	push	r22
 8f2:	7f 93       	push	r23
 8f4:	8f 93       	push	r24
 8f6:	9f 93       	push	r25
 8f8:	af 93       	push	r26
 8fa:	bf 93       	push	r27
 8fc:	ef 93       	push	r30
 8fe:	ff 93       	push	r31
 900:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <led_counter>
 904:	6d ec       	ldi	r22, 0xCD	; 205
 906:	86 9f       	mul	r24, r22
 908:	61 2d       	mov	r22, r1
 90a:	11 24       	eor	r1, r1
 90c:	66 95       	lsr	r22
 90e:	66 95       	lsr	r22
 910:	66 95       	lsr	r22
 912:	b1 f0       	breq	.+44     	; 0x940 <__vector_6+0x62>
 914:	15 ba       	out	0x15, r1	; 21
 916:	70 e0       	ldi	r23, 0x00	; 0
 918:	61 50       	subi	r22, 0x01	; 1
 91a:	71 09       	sbc	r23, r1
 91c:	07 2e       	mov	r0, r23
 91e:	00 0c       	add	r0, r0
 920:	88 0b       	sbc	r24, r24
 922:	99 0b       	sbc	r25, r25
 924:	0e 94 b7 04 	call	0x96e	; 0x96e <__floatsisf>
 928:	9b 01       	movw	r18, r22
 92a:	ac 01       	movw	r20, r24
 92c:	60 e0       	ldi	r22, 0x00	; 0
 92e:	70 e0       	ldi	r23, 0x00	; 0
 930:	80 e0       	ldi	r24, 0x00	; 0
 932:	90 e4       	ldi	r25, 0x40	; 64
 934:	0e 94 1f 04 	call	0x83e	; 0x83e <pow>
 938:	0e 94 9c 05 	call	0xb38	; 0xb38 <__fixunssfsi>
 93c:	65 bb       	out	0x15, r22	; 21
 93e:	02 c0       	rjmp	.+4      	; 0x944 <__vector_6+0x66>
 940:	15 ba       	out	0x15, r1	; 21
 942:	65 bb       	out	0x15, r22	; 21
 944:	1d bc       	out	0x2d, r1	; 45
 946:	1c bc       	out	0x2c, r1	; 44
 948:	ff 91       	pop	r31
 94a:	ef 91       	pop	r30
 94c:	bf 91       	pop	r27
 94e:	af 91       	pop	r26
 950:	9f 91       	pop	r25
 952:	8f 91       	pop	r24
 954:	7f 91       	pop	r23
 956:	6f 91       	pop	r22
 958:	5f 91       	pop	r21
 95a:	4f 91       	pop	r20
 95c:	3f 91       	pop	r19
 95e:	2f 91       	pop	r18
 960:	0f 90       	pop	r0
 962:	0f be       	out	0x3f, r0	; 63
 964:	0f 90       	pop	r0
 966:	1f 90       	pop	r1
 968:	18 95       	reti

Disassembly of section .text.FindEmptyLocation:

00000bf2 <FindEmptyLocation>:
	}

	return 0; //failure
}

uint8_t FindEmptyLocation(uint8_t table[N][N],uint8_t* row,uint8_t* col){
 bf2:	cf 93       	push	r28
 bf4:	df 93       	push	r29
 bf6:	ec 01       	movw	r28, r24
	int i;
	int j;
	for(i=0; i<N;i++){
 bf8:	a0 e0       	ldi	r26, 0x00	; 0
 bfa:	b0 e0       	ldi	r27, 0x00	; 0
 bfc:	1f c0       	rjmp	.+62     	; 0xc3c <FindEmptyLocation+0x4a>
		for(j=0;j<N;j++){
			if(table[i][j]==UNASSIGNED){
 bfe:	fd 01       	movw	r30, r26
 c00:	ee 0f       	add	r30, r30
 c02:	ff 1f       	adc	r31, r31
 c04:	ee 0f       	add	r30, r30
 c06:	ff 1f       	adc	r31, r31
 c08:	ee 0f       	add	r30, r30
 c0a:	ff 1f       	adc	r31, r31
 c0c:	ea 0f       	add	r30, r26
 c0e:	fb 1f       	adc	r31, r27
 c10:	ec 0f       	add	r30, r28
 c12:	fd 1f       	adc	r31, r29
 c14:	e2 0f       	add	r30, r18
 c16:	f3 1f       	adc	r31, r19
 c18:	90 81       	ld	r25, Z
 c1a:	91 11       	cpse	r25, r1
 c1c:	06 c0       	rjmp	.+12     	; 0xc2a <FindEmptyLocation+0x38>
				*row=i;
 c1e:	fb 01       	movw	r30, r22
 c20:	a0 83       	st	Z, r26
				*col=j;
 c22:	fa 01       	movw	r30, r20
 c24:	20 83       	st	Z, r18
				return 1;
 c26:	81 e0       	ldi	r24, 0x01	; 1
 c28:	0d c0       	rjmp	.+26     	; 0xc44 <FindEmptyLocation+0x52>

uint8_t FindEmptyLocation(uint8_t table[N][N],uint8_t* row,uint8_t* col){
	int i;
	int j;
	for(i=0; i<N;i++){
		for(j=0;j<N;j++){
 c2a:	2f 5f       	subi	r18, 0xFF	; 255
 c2c:	3f 4f       	sbci	r19, 0xFF	; 255
 c2e:	02 c0       	rjmp	.+4      	; 0xc34 <FindEmptyLocation+0x42>
 c30:	20 e0       	ldi	r18, 0x00	; 0
 c32:	30 e0       	ldi	r19, 0x00	; 0
 c34:	29 30       	cpi	r18, 0x09	; 9
 c36:	31 05       	cpc	r19, r1
 c38:	14 f3       	brlt	.-60     	; 0xbfe <FindEmptyLocation+0xc>
}

uint8_t FindEmptyLocation(uint8_t table[N][N],uint8_t* row,uint8_t* col){
	int i;
	int j;
	for(i=0; i<N;i++){
 c3a:	11 96       	adiw	r26, 0x01	; 1
 c3c:	a9 30       	cpi	r26, 0x09	; 9
 c3e:	b1 05       	cpc	r27, r1
 c40:	bc f3       	brlt	.-18     	; 0xc30 <FindEmptyLocation+0x3e>

		}


	}
	return 0;
 c42:	80 e0       	ldi	r24, 0x00	; 0
}
 c44:	df 91       	pop	r29
 c46:	cf 91       	pop	r28
 c48:	08 95       	ret

Disassembly of section .text.used:

00000542 <used>:
	TCNT1 = 0;
}



void sending_results(){
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	14 c0       	rjmp	.+40     	; 0x56e <used+0x2c>
 546:	e6 2f       	mov	r30, r22
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	df 01       	movw	r26, r30
 54c:	aa 0f       	add	r26, r26
 54e:	bb 1f       	adc	r27, r27
 550:	aa 0f       	add	r26, r26
 552:	bb 1f       	adc	r27, r27
 554:	aa 0f       	add	r26, r26
 556:	bb 1f       	adc	r27, r27
 558:	ea 0f       	add	r30, r26
 55a:	fb 1f       	adc	r31, r27
 55c:	e8 0f       	add	r30, r24
 55e:	f9 1f       	adc	r31, r25
 560:	e3 0f       	add	r30, r19
 562:	f1 1d       	adc	r31, r1
 564:	50 81       	ld	r21, Z
 566:	52 17       	cp	r21, r18
 568:	09 f4       	brne	.+2      	; 0x56c <used+0x2a>
 56a:	4d c0       	rjmp	.+154    	; 0x606 <used+0xc4>
 56c:	3f 5f       	subi	r19, 0xFF	; 255
 56e:	39 30       	cpi	r19, 0x09	; 9
 570:	50 f3       	brcs	.-44     	; 0x546 <used+0x4>
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	13 c0       	rjmp	.+38     	; 0x59c <used+0x5a>
 576:	e3 2f       	mov	r30, r19
 578:	f0 e0       	ldi	r31, 0x00	; 0
 57a:	df 01       	movw	r26, r30
 57c:	aa 0f       	add	r26, r26
 57e:	bb 1f       	adc	r27, r27
 580:	aa 0f       	add	r26, r26
 582:	bb 1f       	adc	r27, r27
 584:	aa 0f       	add	r26, r26
 586:	bb 1f       	adc	r27, r27
 588:	ea 0f       	add	r30, r26
 58a:	fb 1f       	adc	r31, r27
 58c:	e8 0f       	add	r30, r24
 58e:	f9 1f       	adc	r31, r25
 590:	e4 0f       	add	r30, r20
 592:	f1 1d       	adc	r31, r1
 594:	50 81       	ld	r21, Z
 596:	25 17       	cp	r18, r21
 598:	c1 f1       	breq	.+112    	; 0x60a <used+0xc8>
 59a:	3f 5f       	subi	r19, 0xFF	; 255
 59c:	39 30       	cpi	r19, 0x09	; 9
 59e:	58 f3       	brcs	.-42     	; 0x576 <used+0x34>
 5a0:	3b ea       	ldi	r19, 0xAB	; 171
 5a2:	43 9f       	mul	r20, r19
 5a4:	41 2d       	mov	r20, r1
 5a6:	11 24       	eor	r1, r1
 5a8:	46 95       	lsr	r20
 5aa:	54 2f       	mov	r21, r20
 5ac:	55 0f       	add	r21, r21
 5ae:	45 0f       	add	r20, r21
 5b0:	63 9f       	mul	r22, r19
 5b2:	61 2d       	mov	r22, r1
 5b4:	11 24       	eor	r1, r1
 5b6:	66 95       	lsr	r22
 5b8:	36 2f       	mov	r19, r22
 5ba:	33 0f       	add	r19, r19
 5bc:	63 0f       	add	r22, r19
 5be:	50 e0       	ldi	r21, 0x00	; 0
 5c0:	1e c0       	rjmp	.+60     	; 0x5fe <used+0xbc>
 5c2:	e6 2f       	mov	r30, r22
 5c4:	f0 e0       	ldi	r31, 0x00	; 0
 5c6:	e5 0f       	add	r30, r21
 5c8:	f1 1d       	adc	r31, r1
 5ca:	df 01       	movw	r26, r30
 5cc:	aa 0f       	add	r26, r26
 5ce:	bb 1f       	adc	r27, r27
 5d0:	aa 0f       	add	r26, r26
 5d2:	bb 1f       	adc	r27, r27
 5d4:	aa 0f       	add	r26, r26
 5d6:	bb 1f       	adc	r27, r27
 5d8:	ea 0f       	add	r30, r26
 5da:	fb 1f       	adc	r31, r27
 5dc:	e8 0f       	add	r30, r24
 5de:	f9 1f       	adc	r31, r25
 5e0:	a4 2f       	mov	r26, r20
 5e2:	b0 e0       	ldi	r27, 0x00	; 0
 5e4:	a3 0f       	add	r26, r19
 5e6:	b1 1d       	adc	r27, r1
 5e8:	ea 0f       	add	r30, r26
 5ea:	fb 1f       	adc	r31, r27
 5ec:	70 81       	ld	r23, Z
 5ee:	27 17       	cp	r18, r23
 5f0:	71 f0       	breq	.+28     	; 0x60e <used+0xcc>
 5f2:	3f 5f       	subi	r19, 0xFF	; 255
 5f4:	01 c0       	rjmp	.+2      	; 0x5f8 <used+0xb6>
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	33 30       	cpi	r19, 0x03	; 3
 5fa:	18 f3       	brcs	.-58     	; 0x5c2 <used+0x80>
 5fc:	5f 5f       	subi	r21, 0xFF	; 255
 5fe:	53 30       	cpi	r21, 0x03	; 3
 600:	d0 f3       	brcs	.-12     	; 0x5f6 <used+0xb4>
 602:	80 e0       	ldi	r24, 0x00	; 0
 604:	08 95       	ret
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	08 95       	ret
 60a:	81 e0       	ldi	r24, 0x01	; 1
 60c:	08 95       	ret
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	08 95       	ret

Disassembly of section .text.isOk:

00000c4a <isOk>:
		}
	}
	return 0;
}

uint8_t isOk(uint8_t table[N][N],uint8_t row,uint8_t col, uint8_t num){
 c4a:	0f 93       	push	r16
 c4c:	1f 93       	push	r17
 c4e:	cf 93       	push	r28
 c50:	df 93       	push	r29
 c52:	8c 01       	movw	r16, r24
 c54:	c6 2f       	mov	r28, r22
 c56:	d4 2f       	mov	r29, r20
	if(used(table,row,col,num)==0 && table[row][col]==UNASSIGNED){
 c58:	0e 94 a1 02 	call	0x542	; 0x542 <used>
 c5c:	81 11       	cpse	r24, r1
 c5e:	14 c0       	rjmp	.+40     	; 0xc88 <isOk+0x3e>
 c60:	6c 2f       	mov	r22, r28
 c62:	70 e0       	ldi	r23, 0x00	; 0
 c64:	fb 01       	movw	r30, r22
 c66:	ee 0f       	add	r30, r30
 c68:	ff 1f       	adc	r31, r31
 c6a:	ee 0f       	add	r30, r30
 c6c:	ff 1f       	adc	r31, r31
 c6e:	ee 0f       	add	r30, r30
 c70:	ff 1f       	adc	r31, r31
 c72:	e6 0f       	add	r30, r22
 c74:	f7 1f       	adc	r31, r23
 c76:	e0 0f       	add	r30, r16
 c78:	f1 1f       	adc	r31, r17
 c7a:	ed 0f       	add	r30, r29
 c7c:	f1 1d       	adc	r31, r1
 c7e:	80 81       	ld	r24, Z
 c80:	88 23       	and	r24, r24
 c82:	21 f0       	breq	.+8      	; 0xc8c <isOk+0x42>
		return 1;
	}
	return 0;
 c84:	80 e0       	ldi	r24, 0x00	; 0
 c86:	03 c0       	rjmp	.+6      	; 0xc8e <isOk+0x44>
 c88:	80 e0       	ldi	r24, 0x00	; 0
 c8a:	01 c0       	rjmp	.+2      	; 0xc8e <isOk+0x44>
	return 0;
}

uint8_t isOk(uint8_t table[N][N],uint8_t row,uint8_t col, uint8_t num){
	if(used(table,row,col,num)==0 && table[row][col]==UNASSIGNED){
		return 1;
 c8c:	81 e0       	ldi	r24, 0x01	; 1
	}
	return 0;
}
 c8e:	df 91       	pop	r29
 c90:	cf 91       	pop	r28
 c92:	1f 91       	pop	r17
 c94:	0f 91       	pop	r16
 c96:	08 95       	ret

Disassembly of section .text.SudokuSolver:

000002aa <SudokuSolver>:
	TCNT1 = 0;
}



void sending_results(){
 2aa:	cf 92       	push	r12
 2ac:	df 92       	push	r13
 2ae:	ef 92       	push	r14
 2b0:	ff 92       	push	r15
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	00 d0       	rcall	.+0      	; 0x2bc <SudokuSolver+0x12>
 2bc:	cd b7       	in	r28, 0x3d	; 61
 2be:	de b7       	in	r29, 0x3e	; 62
 2c0:	7c 01       	movw	r14, r24
 2c2:	ae 01       	movw	r20, r28
 2c4:	4e 5f       	subi	r20, 0xFE	; 254
 2c6:	5f 4f       	sbci	r21, 0xFF	; 255
 2c8:	be 01       	movw	r22, r28
 2ca:	6f 5f       	subi	r22, 0xFF	; 255
 2cc:	7f 4f       	sbci	r23, 0xFF	; 255
 2ce:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <FindEmptyLocation>
 2d2:	88 23       	and	r24, r24
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <SudokuSolver+0x2e>
 2d6:	4f c0       	rjmp	.+158    	; 0x376 <SudokuSolver+0xcc>
 2d8:	01 e0       	ldi	r16, 0x01	; 1
 2da:	10 e0       	ldi	r17, 0x00	; 0
 2dc:	45 c0       	rjmp	.+138    	; 0x368 <SudokuSolver+0xbe>
 2de:	ca 80       	ldd	r12, Y+2	; 0x02
 2e0:	d9 80       	ldd	r13, Y+1	; 0x01
 2e2:	20 2f       	mov	r18, r16
 2e4:	4c 2d       	mov	r20, r12
 2e6:	6d 2d       	mov	r22, r13
 2e8:	c7 01       	movw	r24, r14
 2ea:	0e 94 25 06 	call	0xc4a	; 0xc4a <isOk>
 2ee:	81 30       	cpi	r24, 0x01	; 1
 2f0:	c9 f5       	brne	.+114    	; 0x364 <SudokuSolver+0xba>
 2f2:	6d 2d       	mov	r22, r13
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	fb 01       	movw	r30, r22
 2f8:	ee 0f       	add	r30, r30
 2fa:	ff 1f       	adc	r31, r31
 2fc:	ee 0f       	add	r30, r30
 2fe:	ff 1f       	adc	r31, r31
 300:	ee 0f       	add	r30, r30
 302:	ff 1f       	adc	r31, r31
 304:	e6 0f       	add	r30, r22
 306:	f7 1f       	adc	r31, r23
 308:	ee 0d       	add	r30, r14
 30a:	ff 1d       	adc	r31, r15
 30c:	ec 0d       	add	r30, r12
 30e:	f1 1d       	adc	r31, r1
 310:	00 83       	st	Z, r16
 312:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <control_flag>
 316:	82 30       	cpi	r24, 0x02	; 2
 318:	11 f4       	brne	.+4      	; 0x31e <SudokuSolver+0x74>
 31a:	0e 94 56 07 	call	0xeac	; 0xeac <break_command>
 31e:	c7 01       	movw	r24, r14
 320:	0e 94 55 01 	call	0x2aa	; 0x2aa <SudokuSolver>
 324:	89 2b       	or	r24, r25
 326:	41 f0       	breq	.+16     	; 0x338 <SudokuSolver+0x8e>
 328:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <led_counter>
 32c:	8f 5f       	subi	r24, 0xFF	; 255
 32e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <led_counter>
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	21 c0       	rjmp	.+66     	; 0x37a <SudokuSolver+0xd0>
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	fc 01       	movw	r30, r24
 33e:	ee 0f       	add	r30, r30
 340:	ff 1f       	adc	r31, r31
 342:	ee 0f       	add	r30, r30
 344:	ff 1f       	adc	r31, r31
 346:	ee 0f       	add	r30, r30
 348:	ff 1f       	adc	r31, r31
 34a:	e8 0f       	add	r30, r24
 34c:	f9 1f       	adc	r31, r25
 34e:	ee 0d       	add	r30, r14
 350:	ff 1d       	adc	r31, r15
 352:	8a 81       	ldd	r24, Y+2	; 0x02
 354:	e8 0f       	add	r30, r24
 356:	f1 1d       	adc	r31, r1
 358:	10 82       	st	Z, r1
 35a:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <led_counter>
 35e:	81 50       	subi	r24, 0x01	; 1
 360:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <led_counter>
 364:	0f 5f       	subi	r16, 0xFF	; 255
 366:	1f 4f       	sbci	r17, 0xFF	; 255
 368:	0a 30       	cpi	r16, 0x0A	; 10
 36a:	11 05       	cpc	r17, r1
 36c:	0c f4       	brge	.+2      	; 0x370 <SudokuSolver+0xc6>
 36e:	b7 cf       	rjmp	.-146    	; 0x2de <SudokuSolver+0x34>
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <SudokuSolver+0xd0>
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0f 90       	pop	r0
 37c:	0f 90       	pop	r0
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	1f 91       	pop	r17
 384:	0f 91       	pop	r16
 386:	ff 90       	pop	r15
 388:	ef 90       	pop	r14
 38a:	df 90       	pop	r13
 38c:	cf 90       	pop	r12
 38e:	08 95       	ret

Disassembly of section .text.main:

00000d2a <main>:
}


int main(void)
{
	init();
 d2a:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <init>
	sei();		//enable interrupts
 d2e:	78 94       	sei
	

	
    while(1)
    {
			if(control_flag == 1){
 d30:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <control_flag>
 d34:	81 30       	cpi	r24, 0x01	; 1
 d36:	99 f4       	brne	.+38     	; 0xd5e <main+0x34>

				if(SudokuSolver(table)==1){
 d38:	86 e6       	ldi	r24, 0x66	; 102
 d3a:	90 e0       	ldi	r25, 0x00	; 0
 d3c:	0e 94 55 01 	call	0x2aa	; 0x2aa <SudokuSolver>
 d40:	01 97       	sbiw	r24, 0x01	; 1
 d42:	21 f4       	brne	.+8      	; 0xd4c <main+0x22>
					//solved table
					control_flag = 3;
 d44:	83 e0       	ldi	r24, 0x03	; 3
 d46:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <control_flag>
 d4a:	03 c0       	rjmp	.+6      	; 0xd52 <main+0x28>
				}else{
					//break the programm the table cant be solved
					control_flag = 2; 
 d4c:	82 e0       	ldi	r24, 0x02	; 2
 d4e:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <control_flag>
				}
				choose_command = 2;
 d52:	82 e0       	ldi	r24, 0x02	; 2
 d54:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <choose_command>
				enable_send_interrupt();
 d58:	0e 94 6a 07 	call	0xed4	; 0xed4 <enable_send_interrupt>
 d5c:	e9 cf       	rjmp	.-46     	; 0xd30 <main+0x6>
			}else if(control_flag == 2){
 d5e:	82 30       	cpi	r24, 0x02	; 2
 d60:	39 f7       	brne	.-50     	; 0xd30 <main+0x6>
				break_command();
 d62:	0e 94 56 07 	call	0xeac	; 0xeac <break_command>
 d66:	e4 cf       	rjmp	.-56     	; 0xd30 <main+0x6>

Disassembly of section .text.avrlibc.fplib:

00000b38 <__fixunssfsi>:
 b38:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__fp_splitA>
 b3c:	88 f0       	brcs	.+34     	; 0xb60 <__fixunssfsi+0x28>
 b3e:	9f 57       	subi	r25, 0x7F	; 127
 b40:	98 f0       	brcs	.+38     	; 0xb68 <__fixunssfsi+0x30>
 b42:	b9 2f       	mov	r27, r25
 b44:	99 27       	eor	r25, r25
 b46:	b7 51       	subi	r27, 0x17	; 23
 b48:	b0 f0       	brcs	.+44     	; 0xb76 <__fixunssfsi+0x3e>
 b4a:	e1 f0       	breq	.+56     	; 0xb84 <__fixunssfsi+0x4c>
 b4c:	66 0f       	add	r22, r22
 b4e:	77 1f       	adc	r23, r23
 b50:	88 1f       	adc	r24, r24
 b52:	99 1f       	adc	r25, r25
 b54:	1a f0       	brmi	.+6      	; 0xb5c <__fixunssfsi+0x24>
 b56:	ba 95       	dec	r27
 b58:	c9 f7       	brne	.-14     	; 0xb4c <__fixunssfsi+0x14>
 b5a:	14 c0       	rjmp	.+40     	; 0xb84 <__fixunssfsi+0x4c>
 b5c:	b1 30       	cpi	r27, 0x01	; 1
 b5e:	91 f0       	breq	.+36     	; 0xb84 <__fixunssfsi+0x4c>
 b60:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_zero>
 b64:	b1 e0       	ldi	r27, 0x01	; 1
 b66:	08 95       	ret
 b68:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <__fp_zero>
 b6c:	67 2f       	mov	r22, r23
 b6e:	78 2f       	mov	r23, r24
 b70:	88 27       	eor	r24, r24
 b72:	b8 5f       	subi	r27, 0xF8	; 248
 b74:	39 f0       	breq	.+14     	; 0xb84 <__fixunssfsi+0x4c>
 b76:	b9 3f       	cpi	r27, 0xF9	; 249
 b78:	cc f3       	brlt	.-14     	; 0xb6c <__fixunssfsi+0x34>
 b7a:	86 95       	lsr	r24
 b7c:	77 95       	ror	r23
 b7e:	67 95       	ror	r22
 b80:	b3 95       	inc	r27
 b82:	d9 f7       	brne	.-10     	; 0xb7a <__fixunssfsi+0x42>
 b84:	3e f4       	brtc	.+14     	; 0xb94 <__fixunssfsi+0x5c>
 b86:	90 95       	com	r25
 b88:	80 95       	com	r24
 b8a:	70 95       	com	r23
 b8c:	61 95       	neg	r22
 b8e:	7f 4f       	sbci	r23, 0xFF	; 255
 b90:	8f 4f       	sbci	r24, 0xFF	; 255
 b92:	9f 4f       	sbci	r25, 0xFF	; 255
 b94:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000096a <__floatunsisf>:
 96a:	e8 94       	clt
 96c:	09 c0       	rjmp	.+18     	; 0x980 <__floatsisf+0x12>

0000096e <__floatsisf>:
 96e:	97 fb       	bst	r25, 7
 970:	3e f4       	brtc	.+14     	; 0x980 <__floatsisf+0x12>
 972:	90 95       	com	r25
 974:	80 95       	com	r24
 976:	70 95       	com	r23
 978:	61 95       	neg	r22
 97a:	7f 4f       	sbci	r23, 0xFF	; 255
 97c:	8f 4f       	sbci	r24, 0xFF	; 255
 97e:	9f 4f       	sbci	r25, 0xFF	; 255
 980:	99 23       	and	r25, r25
 982:	a9 f0       	breq	.+42     	; 0x9ae <__floatsisf+0x40>
 984:	f9 2f       	mov	r31, r25
 986:	96 e9       	ldi	r25, 0x96	; 150
 988:	bb 27       	eor	r27, r27
 98a:	93 95       	inc	r25
 98c:	f6 95       	lsr	r31
 98e:	87 95       	ror	r24
 990:	77 95       	ror	r23
 992:	67 95       	ror	r22
 994:	b7 95       	ror	r27
 996:	f1 11       	cpse	r31, r1
 998:	f8 cf       	rjmp	.-16     	; 0x98a <__floatsisf+0x1c>
 99a:	fa f4       	brpl	.+62     	; 0x9da <__floatsisf+0x6c>
 99c:	bb 0f       	add	r27, r27
 99e:	11 f4       	brne	.+4      	; 0x9a4 <__floatsisf+0x36>
 9a0:	60 ff       	sbrs	r22, 0
 9a2:	1b c0       	rjmp	.+54     	; 0x9da <__floatsisf+0x6c>
 9a4:	6f 5f       	subi	r22, 0xFF	; 255
 9a6:	7f 4f       	sbci	r23, 0xFF	; 255
 9a8:	8f 4f       	sbci	r24, 0xFF	; 255
 9aa:	9f 4f       	sbci	r25, 0xFF	; 255
 9ac:	16 c0       	rjmp	.+44     	; 0x9da <__floatsisf+0x6c>
 9ae:	88 23       	and	r24, r24
 9b0:	11 f0       	breq	.+4      	; 0x9b6 <__floatsisf+0x48>
 9b2:	96 e9       	ldi	r25, 0x96	; 150
 9b4:	11 c0       	rjmp	.+34     	; 0x9d8 <__floatsisf+0x6a>
 9b6:	77 23       	and	r23, r23
 9b8:	21 f0       	breq	.+8      	; 0x9c2 <__floatsisf+0x54>
 9ba:	9e e8       	ldi	r25, 0x8E	; 142
 9bc:	87 2f       	mov	r24, r23
 9be:	76 2f       	mov	r23, r22
 9c0:	05 c0       	rjmp	.+10     	; 0x9cc <__floatsisf+0x5e>
 9c2:	66 23       	and	r22, r22
 9c4:	71 f0       	breq	.+28     	; 0x9e2 <__floatsisf+0x74>
 9c6:	96 e8       	ldi	r25, 0x86	; 134
 9c8:	86 2f       	mov	r24, r22
 9ca:	70 e0       	ldi	r23, 0x00	; 0
 9cc:	60 e0       	ldi	r22, 0x00	; 0
 9ce:	2a f0       	brmi	.+10     	; 0x9da <__floatsisf+0x6c>
 9d0:	9a 95       	dec	r25
 9d2:	66 0f       	add	r22, r22
 9d4:	77 1f       	adc	r23, r23
 9d6:	88 1f       	adc	r24, r24
 9d8:	da f7       	brpl	.-10     	; 0x9d0 <__floatsisf+0x62>
 9da:	88 0f       	add	r24, r24
 9dc:	96 95       	lsr	r25
 9de:	87 95       	ror	r24
 9e0:	97 f9       	bld	r25, 7
 9e2:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000ce6 <__fp_split3>:
 ce6:	57 fd       	sbrc	r21, 7
 ce8:	90 58       	subi	r25, 0x80	; 128
 cea:	44 0f       	add	r20, r20
 cec:	55 1f       	adc	r21, r21
 cee:	59 f0       	breq	.+22     	; 0xd06 <__fp_splitA+0x10>
 cf0:	5f 3f       	cpi	r21, 0xFF	; 255
 cf2:	71 f0       	breq	.+28     	; 0xd10 <__fp_splitA+0x1a>
 cf4:	47 95       	ror	r20

00000cf6 <__fp_splitA>:
 cf6:	88 0f       	add	r24, r24
 cf8:	97 fb       	bst	r25, 7
 cfa:	99 1f       	adc	r25, r25
 cfc:	61 f0       	breq	.+24     	; 0xd16 <__fp_splitA+0x20>
 cfe:	9f 3f       	cpi	r25, 0xFF	; 255
 d00:	79 f0       	breq	.+30     	; 0xd20 <__fp_splitA+0x2a>
 d02:	87 95       	ror	r24
 d04:	08 95       	ret
 d06:	12 16       	cp	r1, r18
 d08:	13 06       	cpc	r1, r19
 d0a:	14 06       	cpc	r1, r20
 d0c:	55 1f       	adc	r21, r21
 d0e:	f2 cf       	rjmp	.-28     	; 0xcf4 <__fp_split3+0xe>
 d10:	46 95       	lsr	r20
 d12:	f1 df       	rcall	.-30     	; 0xcf6 <__fp_splitA>
 d14:	08 c0       	rjmp	.+16     	; 0xd26 <__fp_splitA+0x30>
 d16:	16 16       	cp	r1, r22
 d18:	17 06       	cpc	r1, r23
 d1a:	18 06       	cpc	r1, r24
 d1c:	99 1f       	adc	r25, r25
 d1e:	f1 cf       	rjmp	.-30     	; 0xd02 <__fp_splitA+0xc>
 d20:	86 95       	lsr	r24
 d22:	71 05       	cpc	r23, r1
 d24:	61 05       	cpc	r22, r1
 d26:	08 94       	sec
 d28:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e74 <__fp_zero>:
 e74:	e8 94       	clt

00000e76 <__fp_szero>:
 e76:	bb 27       	eor	r27, r27
 e78:	66 27       	eor	r22, r22
 e7a:	77 27       	eor	r23, r23
 e7c:	cb 01       	movw	r24, r22
 e7e:	97 f9       	bld	r25, 7
 e80:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000083e <pow>:
 83e:	fa 01       	movw	r30, r20
 840:	ee 0f       	add	r30, r30
 842:	ff 1f       	adc	r31, r31
 844:	30 96       	adiw	r30, 0x00	; 0
 846:	21 05       	cpc	r18, r1
 848:	31 05       	cpc	r19, r1
 84a:	a1 f1       	breq	.+104    	; 0x8b4 <pow+0x76>
 84c:	61 15       	cp	r22, r1
 84e:	71 05       	cpc	r23, r1
 850:	61 f4       	brne	.+24     	; 0x86a <pow+0x2c>
 852:	80 38       	cpi	r24, 0x80	; 128
 854:	bf e3       	ldi	r27, 0x3F	; 63
 856:	9b 07       	cpc	r25, r27
 858:	49 f1       	breq	.+82     	; 0x8ac <pow+0x6e>
 85a:	68 94       	set
 85c:	90 38       	cpi	r25, 0x80	; 128
 85e:	81 05       	cpc	r24, r1
 860:	61 f0       	breq	.+24     	; 0x87a <pow+0x3c>
 862:	80 38       	cpi	r24, 0x80	; 128
 864:	bf ef       	ldi	r27, 0xFF	; 255
 866:	9b 07       	cpc	r25, r27
 868:	41 f0       	breq	.+16     	; 0x87a <pow+0x3c>
 86a:	99 23       	and	r25, r25
 86c:	4a f5       	brpl	.+82     	; 0x8c0 <pow+0x82>
 86e:	ff 3f       	cpi	r31, 0xFF	; 255
 870:	e1 05       	cpc	r30, r1
 872:	31 05       	cpc	r19, r1
 874:	21 05       	cpc	r18, r1
 876:	19 f1       	breq	.+70     	; 0x8be <pow+0x80>
 878:	e8 94       	clt
 87a:	08 94       	sec
 87c:	e7 95       	ror	r30
 87e:	d9 01       	movw	r26, r18
 880:	aa 23       	and	r26, r26
 882:	29 f4       	brne	.+10     	; 0x88e <pow+0x50>
 884:	ab 2f       	mov	r26, r27
 886:	be 2f       	mov	r27, r30
 888:	f8 5f       	subi	r31, 0xF8	; 248
 88a:	d0 f3       	brcs	.-12     	; 0x880 <pow+0x42>
 88c:	10 c0       	rjmp	.+32     	; 0x8ae <pow+0x70>
 88e:	ff 5f       	subi	r31, 0xFF	; 255
 890:	70 f4       	brcc	.+28     	; 0x8ae <pow+0x70>
 892:	a6 95       	lsr	r26
 894:	e0 f7       	brcc	.-8      	; 0x88e <pow+0x50>
 896:	f7 39       	cpi	r31, 0x97	; 151
 898:	50 f0       	brcs	.+20     	; 0x8ae <pow+0x70>
 89a:	19 f0       	breq	.+6      	; 0x8a2 <pow+0x64>
 89c:	ff 3a       	cpi	r31, 0xAF	; 175
 89e:	38 f4       	brcc	.+14     	; 0x8ae <pow+0x70>
 8a0:	9f 77       	andi	r25, 0x7F	; 127
 8a2:	9f 93       	push	r25
 8a4:	0d d0       	rcall	.+26     	; 0x8c0 <pow+0x82>
 8a6:	0f 90       	pop	r0
 8a8:	07 fc       	sbrc	r0, 7
 8aa:	90 58       	subi	r25, 0x80	; 128
 8ac:	08 95       	ret
 8ae:	46 f0       	brts	.+16     	; 0x8c0 <pow+0x82>
 8b0:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_nan>
 8b4:	60 e0       	ldi	r22, 0x00	; 0
 8b6:	70 e0       	ldi	r23, 0x00	; 0
 8b8:	80 e8       	ldi	r24, 0x80	; 128
 8ba:	9f e3       	ldi	r25, 0x3F	; 63
 8bc:	08 95       	ret
 8be:	4f e7       	ldi	r20, 0x7F	; 127
 8c0:	9f 77       	andi	r25, 0x7F	; 127
 8c2:	5f 93       	push	r21
 8c4:	4f 93       	push	r20
 8c6:	3f 93       	push	r19
 8c8:	2f 93       	push	r18
 8ca:	0e 94 ce 03 	call	0x79c	; 0x79c <log>
 8ce:	2f 91       	pop	r18
 8d0:	3f 91       	pop	r19
 8d2:	4f 91       	pop	r20
 8d4:	5f 91       	pop	r21
 8d6:	0e 94 62 07 	call	0xec4	; 0xec4 <__mulsf3>
 8da:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <exp>

Disassembly of section .text.avrlibc.fplib:

000009e4 <exp>:
 9e4:	08 c0       	rjmp	.+16     	; 0x9f6 <exp+0x12>
 9e6:	29 f4       	brne	.+10     	; 0x9f2 <exp+0xe>
 9e8:	16 f0       	brts	.+4      	; 0x9ee <exp+0xa>
 9ea:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 9ee:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <__fp_zero>
 9f2:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_nan>
 9f6:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__fp_splitA>
 9fa:	a8 f3       	brcs	.-22     	; 0x9e6 <exp+0x2>
 9fc:	96 38       	cpi	r25, 0x86	; 134
 9fe:	a0 f7       	brcc	.-24     	; 0x9e8 <exp+0x4>
 a00:	07 f8       	bld	r0, 7
 a02:	0f 92       	push	r0
 a04:	e8 94       	clt
 a06:	2b e3       	ldi	r18, 0x3B	; 59
 a08:	3a ea       	ldi	r19, 0xAA	; 170
 a0a:	48 eb       	ldi	r20, 0xB8	; 184
 a0c:	5f e7       	ldi	r21, 0x7F	; 127
 a0e:	0e 94 4a 02 	call	0x494	; 0x494 <__mulsf3_pse>
 a12:	0f 92       	push	r0
 a14:	0f 92       	push	r0
 a16:	0f 92       	push	r0
 a18:	4d b7       	in	r20, 0x3d	; 61
 a1a:	5e b7       	in	r21, 0x3e	; 62
 a1c:	0f 92       	push	r0
 a1e:	0e 94 68 05 	call	0xad0	; 0xad0 <modf>
 a22:	e4 e5       	ldi	r30, 0x54	; 84
 a24:	f0 e0       	ldi	r31, 0x00	; 0
 a26:	0e 94 4c 06 	call	0xc98	; 0xc98 <__fp_powser>
 a2a:	4f 91       	pop	r20
 a2c:	5f 91       	pop	r21
 a2e:	ef 91       	pop	r30
 a30:	ff 91       	pop	r31
 a32:	e5 95       	asr	r30
 a34:	ee 1f       	adc	r30, r30
 a36:	ff 1f       	adc	r31, r31
 a38:	49 f0       	breq	.+18     	; 0xa4c <exp+0x68>
 a3a:	fe 57       	subi	r31, 0x7E	; 126
 a3c:	e0 68       	ori	r30, 0x80	; 128
 a3e:	44 27       	eor	r20, r20
 a40:	ee 0f       	add	r30, r30
 a42:	44 1f       	adc	r20, r20
 a44:	fa 95       	dec	r31
 a46:	e1 f7       	brne	.-8      	; 0xa40 <exp+0x5c>
 a48:	41 95       	neg	r20
 a4a:	55 0b       	sbc	r21, r21
 a4c:	0e 94 2d 05 	call	0xa5a	; 0xa5a <ldexp>
 a50:	0f 90       	pop	r0
 a52:	07 fe       	sbrs	r0, 7
 a54:	0c 94 32 07 	jmp	0xe64	; 0xe64 <inverse>
 a58:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000eb8 <__fp_inf>:
 eb8:	97 f9       	bld	r25, 7
 eba:	9f 67       	ori	r25, 0x7F	; 127
 ebc:	80 e8       	ldi	r24, 0x80	; 128
 ebe:	70 e0       	ldi	r23, 0x00	; 0
 ec0:	60 e0       	ldi	r22, 0x00	; 0
 ec2:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000eda <__fp_nan>:
 eda:	9f ef       	ldi	r25, 0xFF	; 255
 edc:	80 ec       	ldi	r24, 0xC0	; 192
 ede:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000c98 <__fp_powser>:
 c98:	df 93       	push	r29
 c9a:	cf 93       	push	r28
 c9c:	1f 93       	push	r17
 c9e:	0f 93       	push	r16
 ca0:	ff 92       	push	r15
 ca2:	ef 92       	push	r14
 ca4:	df 92       	push	r13
 ca6:	7b 01       	movw	r14, r22
 ca8:	8c 01       	movw	r16, r24
 caa:	68 94       	set
 cac:	06 c0       	rjmp	.+12     	; 0xcba <__fp_powser+0x22>
 cae:	da 2e       	mov	r13, r26
 cb0:	ef 01       	movw	r28, r30
 cb2:	0e 94 37 02 	call	0x46e	; 0x46e <__mulsf3x>
 cb6:	fe 01       	movw	r30, r28
 cb8:	e8 94       	clt
 cba:	a5 91       	lpm	r26, Z+
 cbc:	25 91       	lpm	r18, Z+
 cbe:	35 91       	lpm	r19, Z+
 cc0:	45 91       	lpm	r20, Z+
 cc2:	55 91       	lpm	r21, Z+
 cc4:	a6 f3       	brts	.-24     	; 0xcae <__fp_powser+0x16>
 cc6:	ef 01       	movw	r28, r30
 cc8:	0e 94 09 03 	call	0x612	; 0x612 <__addsf3x>
 ccc:	fe 01       	movw	r30, r28
 cce:	97 01       	movw	r18, r14
 cd0:	a8 01       	movw	r20, r16
 cd2:	da 94       	dec	r13
 cd4:	69 f7       	brne	.-38     	; 0xcb0 <__fp_powser+0x18>
 cd6:	df 90       	pop	r13
 cd8:	ef 90       	pop	r14
 cda:	ff 90       	pop	r15
 cdc:	0f 91       	pop	r16
 cde:	1f 91       	pop	r17
 ce0:	cf 91       	pop	r28
 ce2:	df 91       	pop	r29
 ce4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e64 <inverse>:
 e64:	9b 01       	movw	r18, r22
 e66:	ac 01       	movw	r20, r24
 e68:	60 e0       	ldi	r22, 0x00	; 0
 e6a:	70 e0       	ldi	r23, 0x00	; 0
 e6c:	80 e8       	ldi	r24, 0x80	; 128
 e6e:	9f e3       	ldi	r25, 0x3F	; 63
 e70:	0c 94 66 07 	jmp	0xecc	; 0xecc <__divsf3>

Disassembly of section .text.avrlibc.fplib:

00000a5a <ldexp>:
 a5a:	04 c0       	rjmp	.+8      	; 0xa64 <ldexp+0xa>
 a5c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 a60:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__fp_mpack>
 a64:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__fp_splitA>
 a68:	d8 f3       	brcs	.-10     	; 0xa60 <ldexp+0x6>
 a6a:	99 23       	and	r25, r25
 a6c:	c9 f3       	breq	.-14     	; 0xa60 <ldexp+0x6>
 a6e:	94 0f       	add	r25, r20
 a70:	51 1d       	adc	r21, r1
 a72:	a3 f3       	brvs	.-24     	; 0xa5c <ldexp+0x2>
 a74:	91 50       	subi	r25, 0x01	; 1
 a76:	50 40       	sbci	r21, 0x00	; 0
 a78:	94 f0       	brlt	.+36     	; 0xa9e <ldexp+0x44>
 a7a:	59 f0       	breq	.+22     	; 0xa92 <ldexp+0x38>
 a7c:	88 23       	and	r24, r24
 a7e:	32 f0       	brmi	.+12     	; 0xa8c <ldexp+0x32>
 a80:	66 0f       	add	r22, r22
 a82:	77 1f       	adc	r23, r23
 a84:	88 1f       	adc	r24, r24
 a86:	91 50       	subi	r25, 0x01	; 1
 a88:	50 40       	sbci	r21, 0x00	; 0
 a8a:	c1 f7       	brne	.-16     	; 0xa7c <ldexp+0x22>
 a8c:	9e 3f       	cpi	r25, 0xFE	; 254
 a8e:	51 05       	cpc	r21, r1
 a90:	2c f7       	brge	.-54     	; 0xa5c <ldexp+0x2>
 a92:	88 0f       	add	r24, r24
 a94:	91 1d       	adc	r25, r1
 a96:	96 95       	lsr	r25
 a98:	87 95       	ror	r24
 a9a:	97 f9       	bld	r25, 7
 a9c:	08 95       	ret
 a9e:	5f 3f       	cpi	r21, 0xFF	; 255
 aa0:	ac f0       	brlt	.+42     	; 0xacc <ldexp+0x72>
 aa2:	98 3e       	cpi	r25, 0xE8	; 232
 aa4:	9c f0       	brlt	.+38     	; 0xacc <ldexp+0x72>
 aa6:	bb 27       	eor	r27, r27
 aa8:	86 95       	lsr	r24
 aaa:	77 95       	ror	r23
 aac:	67 95       	ror	r22
 aae:	b7 95       	ror	r27
 ab0:	08 f4       	brcc	.+2      	; 0xab4 <ldexp+0x5a>
 ab2:	b1 60       	ori	r27, 0x01	; 1
 ab4:	93 95       	inc	r25
 ab6:	c1 f7       	brne	.-16     	; 0xaa8 <ldexp+0x4e>
 ab8:	bb 0f       	add	r27, r27
 aba:	58 f7       	brcc	.-42     	; 0xa92 <ldexp+0x38>
 abc:	11 f4       	brne	.+4      	; 0xac2 <ldexp+0x68>
 abe:	60 ff       	sbrs	r22, 0
 ac0:	e8 cf       	rjmp	.-48     	; 0xa92 <ldexp+0x38>
 ac2:	6f 5f       	subi	r22, 0xFF	; 255
 ac4:	7f 4f       	sbci	r23, 0xFF	; 255
 ac6:	8f 4f       	sbci	r24, 0xFF	; 255
 ac8:	9f 4f       	sbci	r25, 0xFF	; 255
 aca:	e3 cf       	rjmp	.-58     	; 0xa92 <ldexp+0x38>
 acc:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__fp_szero>

Disassembly of section .text.avrlibc.fplib:

0000079c <log>:
 79c:	08 c0       	rjmp	.+16     	; 0x7ae <log+0x12>
 79e:	16 f0       	brts	.+4      	; 0x7a4 <log+0x8>
 7a0:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__fp_mpack>
 7a4:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_nan>
 7a8:	68 94       	set
 7aa:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 7ae:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__fp_splitA>
 7b2:	a8 f3       	brcs	.-22     	; 0x79e <log+0x2>
 7b4:	99 23       	and	r25, r25
 7b6:	c1 f3       	breq	.-16     	; 0x7a8 <log+0xc>
 7b8:	ae f3       	brts	.-22     	; 0x7a4 <log+0x8>
 7ba:	df 93       	push	r29
 7bc:	cf 93       	push	r28
 7be:	1f 93       	push	r17
 7c0:	0f 93       	push	r16
 7c2:	ff 92       	push	r15
 7c4:	c9 2f       	mov	r28, r25
 7c6:	dd 27       	eor	r29, r29
 7c8:	88 23       	and	r24, r24
 7ca:	2a f0       	brmi	.+10     	; 0x7d6 <log+0x3a>
 7cc:	21 97       	sbiw	r28, 0x01	; 1
 7ce:	66 0f       	add	r22, r22
 7d0:	77 1f       	adc	r23, r23
 7d2:	88 1f       	adc	r24, r24
 7d4:	da f7       	brpl	.-10     	; 0x7cc <log+0x30>
 7d6:	20 e0       	ldi	r18, 0x00	; 0
 7d8:	30 e0       	ldi	r19, 0x00	; 0
 7da:	40 e8       	ldi	r20, 0x80	; 128
 7dc:	5f eb       	ldi	r21, 0xBF	; 191
 7de:	9f e3       	ldi	r25, 0x3F	; 63
 7e0:	88 39       	cpi	r24, 0x98	; 152
 7e2:	20 f0       	brcs	.+8      	; 0x7ec <log+0x50>
 7e4:	80 3e       	cpi	r24, 0xE0	; 224
 7e6:	38 f0       	brcs	.+14     	; 0x7f6 <log+0x5a>
 7e8:	21 96       	adiw	r28, 0x01	; 1
 7ea:	8f 77       	andi	r24, 0x7F	; 127
 7ec:	0e 94 42 07 	call	0xe84	; 0xe84 <__addsf3>
 7f0:	ec e7       	ldi	r30, 0x7C	; 124
 7f2:	f0 e0       	ldi	r31, 0x00	; 0
 7f4:	04 c0       	rjmp	.+8      	; 0x7fe <log+0x62>
 7f6:	0e 94 42 07 	call	0xe84	; 0xe84 <__addsf3>
 7fa:	e9 ea       	ldi	r30, 0xA9	; 169
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	0e 94 4c 06 	call	0xc98	; 0xc98 <__fp_powser>
 802:	8b 01       	movw	r16, r22
 804:	be 01       	movw	r22, r28
 806:	ec 01       	movw	r28, r24
 808:	fb 2e       	mov	r15, r27
 80a:	6f 57       	subi	r22, 0x7F	; 127
 80c:	71 09       	sbc	r23, r1
 80e:	75 95       	asr	r23
 810:	77 1f       	adc	r23, r23
 812:	88 0b       	sbc	r24, r24
 814:	99 0b       	sbc	r25, r25
 816:	0e 94 b7 04 	call	0x96e	; 0x96e <__floatsisf>
 81a:	28 e1       	ldi	r18, 0x18	; 24
 81c:	32 e7       	ldi	r19, 0x72	; 114
 81e:	41 e3       	ldi	r20, 0x31	; 49
 820:	5f e3       	ldi	r21, 0x3F	; 63
 822:	0e 94 37 02 	call	0x46e	; 0x46e <__mulsf3x>
 826:	af 2d       	mov	r26, r15
 828:	98 01       	movw	r18, r16
 82a:	ae 01       	movw	r20, r28
 82c:	ff 90       	pop	r15
 82e:	0f 91       	pop	r16
 830:	1f 91       	pop	r17
 832:	cf 91       	pop	r28
 834:	df 91       	pop	r29
 836:	0e 94 09 03 	call	0x612	; 0x612 <__addsf3x>
 83a:	0c 94 13 07 	jmp	0xe26	; 0xe26 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000ad0 <modf>:
 ad0:	fa 01       	movw	r30, r20
 ad2:	dc 01       	movw	r26, r24
 ad4:	aa 0f       	add	r26, r26
 ad6:	bb 1f       	adc	r27, r27
 ad8:	9b 01       	movw	r18, r22
 ada:	ac 01       	movw	r20, r24
 adc:	bf 57       	subi	r27, 0x7F	; 127
 ade:	28 f4       	brcc	.+10     	; 0xaea <modf+0x1a>
 ae0:	22 27       	eor	r18, r18
 ae2:	33 27       	eor	r19, r19
 ae4:	44 27       	eor	r20, r20
 ae6:	50 78       	andi	r21, 0x80	; 128
 ae8:	20 c0       	rjmp	.+64     	; 0xb2a <modf+0x5a>
 aea:	b7 51       	subi	r27, 0x17	; 23
 aec:	90 f4       	brcc	.+36     	; 0xb12 <modf+0x42>
 aee:	ab 2f       	mov	r26, r27
 af0:	00 24       	eor	r0, r0
 af2:	46 95       	lsr	r20
 af4:	37 95       	ror	r19
 af6:	27 95       	ror	r18
 af8:	01 1c       	adc	r0, r1
 afa:	a3 95       	inc	r26
 afc:	d2 f3       	brmi	.-12     	; 0xaf2 <modf+0x22>
 afe:	00 20       	and	r0, r0
 b00:	71 f0       	breq	.+28     	; 0xb1e <modf+0x4e>
 b02:	22 0f       	add	r18, r18
 b04:	33 1f       	adc	r19, r19
 b06:	44 1f       	adc	r20, r20
 b08:	b3 95       	inc	r27
 b0a:	da f3       	brmi	.-10     	; 0xb02 <modf+0x32>
 b0c:	0e d0       	rcall	.+28     	; 0xb2a <modf+0x5a>
 b0e:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__subsf3>
 b12:	61 30       	cpi	r22, 0x01	; 1
 b14:	71 05       	cpc	r23, r1
 b16:	a0 e8       	ldi	r26, 0x80	; 128
 b18:	8a 07       	cpc	r24, r26
 b1a:	b9 46       	sbci	r27, 0x69	; 105
 b1c:	30 f4       	brcc	.+12     	; 0xb2a <modf+0x5a>
 b1e:	9b 01       	movw	r18, r22
 b20:	ac 01       	movw	r20, r24
 b22:	66 27       	eor	r22, r22
 b24:	77 27       	eor	r23, r23
 b26:	88 27       	eor	r24, r24
 b28:	90 78       	andi	r25, 0x80	; 128
 b2a:	30 96       	adiw	r30, 0x00	; 0
 b2c:	21 f0       	breq	.+8      	; 0xb36 <modf+0x66>
 b2e:	20 83       	st	Z, r18
 b30:	31 83       	std	Z+1, r19	; 0x01
 b32:	42 83       	std	Z+2, r20	; 0x02
 b34:	53 83       	std	Z+3, r21	; 0x03
 b36:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000ec4 <__mulsf3>:
 ec4:	0e 94 37 02 	call	0x46e	; 0x46e <__mulsf3x>
 ec8:	0c 94 13 07 	jmp	0xe26	; 0xe26 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

0000046e <__mulsf3x>:
 46e:	0f c0       	rjmp	.+30     	; 0x48e <__mulsf3x+0x20>
 470:	0e 94 48 07 	call	0xe90	; 0xe90 <__fp_pscA>
 474:	38 f0       	brcs	.+14     	; 0x484 <__mulsf3x+0x16>
 476:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__fp_pscB>
 47a:	20 f0       	brcs	.+8      	; 0x484 <__mulsf3x+0x16>
 47c:	95 23       	and	r25, r21
 47e:	11 f0       	breq	.+4      	; 0x484 <__mulsf3x+0x16>
 480:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 484:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_nan>
 488:	11 24       	eor	r1, r1
 48a:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__fp_szero>
 48e:	0e 94 73 06 	call	0xce6	; 0xce6 <__fp_split3>
 492:	70 f3       	brcs	.-36     	; 0x470 <__mulsf3x+0x2>

00000494 <__mulsf3_pse>:
 494:	95 9f       	mul	r25, r21
 496:	c1 f3       	breq	.-16     	; 0x488 <__mulsf3x+0x1a>
 498:	95 0f       	add	r25, r21
 49a:	50 e0       	ldi	r21, 0x00	; 0
 49c:	55 1f       	adc	r21, r21
 49e:	62 9f       	mul	r22, r18
 4a0:	f0 01       	movw	r30, r0
 4a2:	72 9f       	mul	r23, r18
 4a4:	bb 27       	eor	r27, r27
 4a6:	f0 0d       	add	r31, r0
 4a8:	b1 1d       	adc	r27, r1
 4aa:	63 9f       	mul	r22, r19
 4ac:	aa 27       	eor	r26, r26
 4ae:	f0 0d       	add	r31, r0
 4b0:	b1 1d       	adc	r27, r1
 4b2:	aa 1f       	adc	r26, r26
 4b4:	64 9f       	mul	r22, r20
 4b6:	66 27       	eor	r22, r22
 4b8:	b0 0d       	add	r27, r0
 4ba:	a1 1d       	adc	r26, r1
 4bc:	66 1f       	adc	r22, r22
 4be:	82 9f       	mul	r24, r18
 4c0:	22 27       	eor	r18, r18
 4c2:	b0 0d       	add	r27, r0
 4c4:	a1 1d       	adc	r26, r1
 4c6:	62 1f       	adc	r22, r18
 4c8:	73 9f       	mul	r23, r19
 4ca:	b0 0d       	add	r27, r0
 4cc:	a1 1d       	adc	r26, r1
 4ce:	62 1f       	adc	r22, r18
 4d0:	83 9f       	mul	r24, r19
 4d2:	a0 0d       	add	r26, r0
 4d4:	61 1d       	adc	r22, r1
 4d6:	22 1f       	adc	r18, r18
 4d8:	74 9f       	mul	r23, r20
 4da:	33 27       	eor	r19, r19
 4dc:	a0 0d       	add	r26, r0
 4de:	61 1d       	adc	r22, r1
 4e0:	23 1f       	adc	r18, r19
 4e2:	84 9f       	mul	r24, r20
 4e4:	60 0d       	add	r22, r0
 4e6:	21 1d       	adc	r18, r1
 4e8:	82 2f       	mov	r24, r18
 4ea:	76 2f       	mov	r23, r22
 4ec:	6a 2f       	mov	r22, r26
 4ee:	11 24       	eor	r1, r1
 4f0:	9f 57       	subi	r25, 0x7F	; 127
 4f2:	50 40       	sbci	r21, 0x00	; 0
 4f4:	9a f0       	brmi	.+38     	; 0x51c <__mulsf3_pse+0x88>
 4f6:	f1 f0       	breq	.+60     	; 0x534 <__mulsf3_pse+0xa0>
 4f8:	88 23       	and	r24, r24
 4fa:	4a f0       	brmi	.+18     	; 0x50e <__mulsf3_pse+0x7a>
 4fc:	ee 0f       	add	r30, r30
 4fe:	ff 1f       	adc	r31, r31
 500:	bb 1f       	adc	r27, r27
 502:	66 1f       	adc	r22, r22
 504:	77 1f       	adc	r23, r23
 506:	88 1f       	adc	r24, r24
 508:	91 50       	subi	r25, 0x01	; 1
 50a:	50 40       	sbci	r21, 0x00	; 0
 50c:	a9 f7       	brne	.-22     	; 0x4f8 <__mulsf3_pse+0x64>
 50e:	9e 3f       	cpi	r25, 0xFE	; 254
 510:	51 05       	cpc	r21, r1
 512:	80 f0       	brcs	.+32     	; 0x534 <__mulsf3_pse+0xa0>
 514:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 518:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__fp_szero>
 51c:	5f 3f       	cpi	r21, 0xFF	; 255
 51e:	e4 f3       	brlt	.-8      	; 0x518 <__mulsf3_pse+0x84>
 520:	98 3e       	cpi	r25, 0xE8	; 232
 522:	d4 f3       	brlt	.-12     	; 0x518 <__mulsf3_pse+0x84>
 524:	86 95       	lsr	r24
 526:	77 95       	ror	r23
 528:	67 95       	ror	r22
 52a:	b7 95       	ror	r27
 52c:	f7 95       	ror	r31
 52e:	e7 95       	ror	r30
 530:	9f 5f       	subi	r25, 0xFF	; 255
 532:	c1 f7       	brne	.-16     	; 0x524 <__mulsf3_pse+0x90>
 534:	fe 2b       	or	r31, r30
 536:	88 0f       	add	r24, r24
 538:	91 1d       	adc	r25, r1
 53a:	96 95       	lsr	r25
 53c:	87 95       	ror	r24
 53e:	97 f9       	bld	r25, 7
 540:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e82 <__subsf3>:
 e82:	50 58       	subi	r21, 0x80	; 128

00000e84 <__addsf3>:
 e84:	bb 27       	eor	r27, r27
 e86:	aa 27       	eor	r26, r26
 e88:	0e 94 09 03 	call	0x612	; 0x612 <__addsf3x>
 e8c:	0c 94 13 07 	jmp	0xe26	; 0xe26 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000612 <__addsf3x>:
 612:	11 c0       	rjmp	.+34     	; 0x636 <__addsf3x+0x24>
 614:	0e 94 48 07 	call	0xe90	; 0xe90 <__fp_pscA>
 618:	38 f0       	brcs	.+14     	; 0x628 <__addsf3x+0x16>
 61a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__fp_pscB>
 61e:	20 f0       	brcs	.+8      	; 0x628 <__addsf3x+0x16>
 620:	39 f4       	brne	.+14     	; 0x630 <__addsf3x+0x1e>
 622:	9f 3f       	cpi	r25, 0xFF	; 255
 624:	19 f4       	brne	.+6      	; 0x62c <__addsf3x+0x1a>
 626:	26 f4       	brtc	.+8      	; 0x630 <__addsf3x+0x1e>
 628:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_nan>
 62c:	0e f4       	brtc	.+2      	; 0x630 <__addsf3x+0x1e>
 62e:	e0 95       	com	r30
 630:	e7 fb       	bst	r30, 7
 632:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 636:	e9 2f       	mov	r30, r25
 638:	0e 94 73 06 	call	0xce6	; 0xce6 <__fp_split3>
 63c:	58 f3       	brcs	.-42     	; 0x614 <__addsf3x+0x2>
 63e:	ba 17       	cp	r27, r26
 640:	62 07       	cpc	r22, r18
 642:	73 07       	cpc	r23, r19
 644:	84 07       	cpc	r24, r20
 646:	95 07       	cpc	r25, r21
 648:	20 f0       	brcs	.+8      	; 0x652 <__addsf3x+0x40>
 64a:	79 f4       	brne	.+30     	; 0x66a <__addsf3x+0x58>
 64c:	a6 f5       	brtc	.+104    	; 0x6b6 <__addsf3x+0xa4>
 64e:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <__fp_zero>
 652:	0e f4       	brtc	.+2      	; 0x656 <__addsf3x+0x44>
 654:	e0 95       	com	r30
 656:	0b 2e       	mov	r0, r27
 658:	ba 2f       	mov	r27, r26
 65a:	a0 2d       	mov	r26, r0
 65c:	0b 01       	movw	r0, r22
 65e:	b9 01       	movw	r22, r18
 660:	90 01       	movw	r18, r0
 662:	0c 01       	movw	r0, r24
 664:	ca 01       	movw	r24, r20
 666:	a0 01       	movw	r20, r0
 668:	11 24       	eor	r1, r1
 66a:	ff 27       	eor	r31, r31
 66c:	59 1b       	sub	r21, r25
 66e:	99 f0       	breq	.+38     	; 0x696 <__addsf3x+0x84>
 670:	59 3f       	cpi	r21, 0xF9	; 249
 672:	50 f4       	brcc	.+20     	; 0x688 <__addsf3x+0x76>
 674:	50 3e       	cpi	r21, 0xE0	; 224
 676:	68 f1       	brcs	.+90     	; 0x6d2 <__addsf3x+0xc0>
 678:	1a 16       	cp	r1, r26
 67a:	f0 40       	sbci	r31, 0x00	; 0
 67c:	a2 2f       	mov	r26, r18
 67e:	23 2f       	mov	r18, r19
 680:	34 2f       	mov	r19, r20
 682:	44 27       	eor	r20, r20
 684:	58 5f       	subi	r21, 0xF8	; 248
 686:	f3 cf       	rjmp	.-26     	; 0x66e <__addsf3x+0x5c>
 688:	46 95       	lsr	r20
 68a:	37 95       	ror	r19
 68c:	27 95       	ror	r18
 68e:	a7 95       	ror	r26
 690:	f0 40       	sbci	r31, 0x00	; 0
 692:	53 95       	inc	r21
 694:	c9 f7       	brne	.-14     	; 0x688 <__addsf3x+0x76>
 696:	7e f4       	brtc	.+30     	; 0x6b6 <__addsf3x+0xa4>
 698:	1f 16       	cp	r1, r31
 69a:	ba 0b       	sbc	r27, r26
 69c:	62 0b       	sbc	r22, r18
 69e:	73 0b       	sbc	r23, r19
 6a0:	84 0b       	sbc	r24, r20
 6a2:	ba f0       	brmi	.+46     	; 0x6d2 <__addsf3x+0xc0>
 6a4:	91 50       	subi	r25, 0x01	; 1
 6a6:	a1 f0       	breq	.+40     	; 0x6d0 <__addsf3x+0xbe>
 6a8:	ff 0f       	add	r31, r31
 6aa:	bb 1f       	adc	r27, r27
 6ac:	66 1f       	adc	r22, r22
 6ae:	77 1f       	adc	r23, r23
 6b0:	88 1f       	adc	r24, r24
 6b2:	c2 f7       	brpl	.-16     	; 0x6a4 <__addsf3x+0x92>
 6b4:	0e c0       	rjmp	.+28     	; 0x6d2 <__addsf3x+0xc0>
 6b6:	ba 0f       	add	r27, r26
 6b8:	62 1f       	adc	r22, r18
 6ba:	73 1f       	adc	r23, r19
 6bc:	84 1f       	adc	r24, r20
 6be:	48 f4       	brcc	.+18     	; 0x6d2 <__addsf3x+0xc0>
 6c0:	87 95       	ror	r24
 6c2:	77 95       	ror	r23
 6c4:	67 95       	ror	r22
 6c6:	b7 95       	ror	r27
 6c8:	f7 95       	ror	r31
 6ca:	9e 3f       	cpi	r25, 0xFE	; 254
 6cc:	08 f0       	brcs	.+2      	; 0x6d0 <__addsf3x+0xbe>
 6ce:	b0 cf       	rjmp	.-160    	; 0x630 <__addsf3x+0x1e>
 6d0:	93 95       	inc	r25
 6d2:	88 0f       	add	r24, r24
 6d4:	08 f0       	brcs	.+2      	; 0x6d8 <__addsf3x+0xc6>
 6d6:	99 27       	eor	r25, r25
 6d8:	ee 0f       	add	r30, r30
 6da:	97 95       	ror	r25
 6dc:	87 95       	ror	r24
 6de:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000ecc <__divsf3>:
 ecc:	0e 94 c8 01 	call	0x390	; 0x390 <__divsf3x>
 ed0:	0c 94 13 07 	jmp	0xe26	; 0xe26 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000390 <__divsf3x>:
 390:	10 c0       	rjmp	.+32     	; 0x3b2 <__divsf3x+0x22>
 392:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__fp_pscB>
 396:	58 f0       	brcs	.+22     	; 0x3ae <__divsf3x+0x1e>
 398:	0e 94 48 07 	call	0xe90	; 0xe90 <__fp_pscA>
 39c:	40 f0       	brcs	.+16     	; 0x3ae <__divsf3x+0x1e>
 39e:	29 f4       	brne	.+10     	; 0x3aa <__divsf3x+0x1a>
 3a0:	5f 3f       	cpi	r21, 0xFF	; 255
 3a2:	29 f0       	breq	.+10     	; 0x3ae <__divsf3x+0x1e>
 3a4:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 3a8:	51 11       	cpse	r21, r1
 3aa:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__fp_szero>
 3ae:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_nan>
 3b2:	0e 94 73 06 	call	0xce6	; 0xce6 <__fp_split3>
 3b6:	68 f3       	brcs	.-38     	; 0x392 <__divsf3x+0x2>

000003b8 <__divsf3_pse>:
 3b8:	99 23       	and	r25, r25
 3ba:	b1 f3       	breq	.-20     	; 0x3a8 <__divsf3x+0x18>
 3bc:	55 23       	and	r21, r21
 3be:	91 f3       	breq	.-28     	; 0x3a4 <__divsf3x+0x14>
 3c0:	95 1b       	sub	r25, r21
 3c2:	55 0b       	sbc	r21, r21
 3c4:	bb 27       	eor	r27, r27
 3c6:	aa 27       	eor	r26, r26
 3c8:	62 17       	cp	r22, r18
 3ca:	73 07       	cpc	r23, r19
 3cc:	84 07       	cpc	r24, r20
 3ce:	38 f0       	brcs	.+14     	; 0x3de <__divsf3_pse+0x26>
 3d0:	9f 5f       	subi	r25, 0xFF	; 255
 3d2:	5f 4f       	sbci	r21, 0xFF	; 255
 3d4:	22 0f       	add	r18, r18
 3d6:	33 1f       	adc	r19, r19
 3d8:	44 1f       	adc	r20, r20
 3da:	aa 1f       	adc	r26, r26
 3dc:	a9 f3       	breq	.-22     	; 0x3c8 <__divsf3_pse+0x10>
 3de:	35 d0       	rcall	.+106    	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 3e0:	0e 2e       	mov	r0, r30
 3e2:	3a f0       	brmi	.+14     	; 0x3f2 <__divsf3_pse+0x3a>
 3e4:	e0 e8       	ldi	r30, 0x80	; 128
 3e6:	32 d0       	rcall	.+100    	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 3e8:	91 50       	subi	r25, 0x01	; 1
 3ea:	50 40       	sbci	r21, 0x00	; 0
 3ec:	e6 95       	lsr	r30
 3ee:	00 1c       	adc	r0, r0
 3f0:	ca f7       	brpl	.-14     	; 0x3e4 <__divsf3_pse+0x2c>
 3f2:	2b d0       	rcall	.+86     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 3f4:	fe 2f       	mov	r31, r30
 3f6:	29 d0       	rcall	.+82     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 3f8:	66 0f       	add	r22, r22
 3fa:	77 1f       	adc	r23, r23
 3fc:	88 1f       	adc	r24, r24
 3fe:	bb 1f       	adc	r27, r27
 400:	26 17       	cp	r18, r22
 402:	37 07       	cpc	r19, r23
 404:	48 07       	cpc	r20, r24
 406:	ab 07       	cpc	r26, r27
 408:	b0 e8       	ldi	r27, 0x80	; 128
 40a:	09 f0       	breq	.+2      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 40c:	bb 0b       	sbc	r27, r27
 40e:	80 2d       	mov	r24, r0
 410:	bf 01       	movw	r22, r30
 412:	ff 27       	eor	r31, r31
 414:	93 58       	subi	r25, 0x83	; 131
 416:	5f 4f       	sbci	r21, 0xFF	; 255
 418:	3a f0       	brmi	.+14     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 41a:	9e 3f       	cpi	r25, 0xFE	; 254
 41c:	51 05       	cpc	r21, r1
 41e:	78 f0       	brcs	.+30     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 420:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_inf>
 424:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__fp_szero>
 428:	5f 3f       	cpi	r21, 0xFF	; 255
 42a:	e4 f3       	brlt	.-8      	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 42c:	98 3e       	cpi	r25, 0xE8	; 232
 42e:	d4 f3       	brlt	.-12     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 430:	86 95       	lsr	r24
 432:	77 95       	ror	r23
 434:	67 95       	ror	r22
 436:	b7 95       	ror	r27
 438:	f7 95       	ror	r31
 43a:	9f 5f       	subi	r25, 0xFF	; 255
 43c:	c9 f7       	brne	.-14     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
 43e:	88 0f       	add	r24, r24
 440:	91 1d       	adc	r25, r1
 442:	96 95       	lsr	r25
 444:	87 95       	ror	r24
 446:	97 f9       	bld	r25, 7
 448:	08 95       	ret
 44a:	e1 e0       	ldi	r30, 0x01	; 1
 44c:	66 0f       	add	r22, r22
 44e:	77 1f       	adc	r23, r23
 450:	88 1f       	adc	r24, r24
 452:	bb 1f       	adc	r27, r27
 454:	62 17       	cp	r22, r18
 456:	73 07       	cpc	r23, r19
 458:	84 07       	cpc	r24, r20
 45a:	ba 07       	cpc	r27, r26
 45c:	20 f0       	brcs	.+8      	; 0x466 <__stack+0x7>
 45e:	62 1b       	sub	r22, r18
 460:	73 0b       	sbc	r23, r19
 462:	84 0b       	sbc	r24, r20
 464:	ba 0b       	sbc	r27, r26
 466:	ee 1f       	adc	r30, r30
 468:	88 f7       	brcc	.-30     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 46a:	e0 95       	com	r30
 46c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e48 <__fp_mpack>:
 e48:	9f 3f       	cpi	r25, 0xFF	; 255
 e4a:	31 f0       	breq	.+12     	; 0xe58 <__fp_mpack_finite+0xc>

00000e4c <__fp_mpack_finite>:
 e4c:	91 50       	subi	r25, 0x01	; 1
 e4e:	20 f4       	brcc	.+8      	; 0xe58 <__fp_mpack_finite+0xc>
 e50:	87 95       	ror	r24
 e52:	77 95       	ror	r23
 e54:	67 95       	ror	r22
 e56:	b7 95       	ror	r27
 e58:	88 0f       	add	r24, r24
 e5a:	91 1d       	adc	r25, r1
 e5c:	96 95       	lsr	r25
 e5e:	87 95       	ror	r24
 e60:	97 f9       	bld	r25, 7
 e62:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e90 <__fp_pscA>:
 e90:	00 24       	eor	r0, r0
 e92:	0a 94       	dec	r0
 e94:	16 16       	cp	r1, r22
 e96:	17 06       	cpc	r1, r23
 e98:	18 06       	cpc	r1, r24
 e9a:	09 06       	cpc	r0, r25
 e9c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e9e <__fp_pscB>:
 e9e:	00 24       	eor	r0, r0
 ea0:	0a 94       	dec	r0
 ea2:	12 16       	cp	r1, r18
 ea4:	13 06       	cpc	r1, r19
 ea6:	14 06       	cpc	r1, r20
 ea8:	05 06       	cpc	r0, r21
 eaa:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e26 <__fp_round>:
 e26:	09 2e       	mov	r0, r25
 e28:	03 94       	inc	r0
 e2a:	00 0c       	add	r0, r0
 e2c:	11 f4       	brne	.+4      	; 0xe32 <__fp_round+0xc>
 e2e:	88 23       	and	r24, r24
 e30:	52 f0       	brmi	.+20     	; 0xe46 <__fp_round+0x20>
 e32:	bb 0f       	add	r27, r27
 e34:	40 f4       	brcc	.+16     	; 0xe46 <__fp_round+0x20>
 e36:	bf 2b       	or	r27, r31
 e38:	11 f4       	brne	.+4      	; 0xe3e <__fp_round+0x18>
 e3a:	60 ff       	sbrs	r22, 0
 e3c:	04 c0       	rjmp	.+8      	; 0xe46 <__fp_round+0x20>
 e3e:	6f 5f       	subi	r22, 0xFF	; 255
 e40:	7f 4f       	sbci	r23, 0xFF	; 255
 e42:	8f 4f       	sbci	r24, 0xFF	; 255
 e44:	9f 4f       	sbci	r25, 0xFF	; 255
 e46:	08 95       	ret
